version: '3.8'

services:
  n8n-mcp:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    image: n8n-mcp-modern:latest
    container_name: n8n-mcp-server
    restart: unless-stopped
    
    # Security settings
    security_opt:
      - no-new-privileges:true
    read_only: true
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    
    # Environment variables (override with .env file)
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - N8N_API_URL=${N8N_API_URL}
      - N8N_API_KEY=${N8N_API_KEY}
      - MCP_MODE=${MCP_MODE:-stdio}
      - DATABASE_PATH=/app/data/nodes.db
      - ENABLE_CACHE=${ENABLE_CACHE:-true}
      - CACHE_TTL=${CACHE_TTL:-3600}
      - MAX_CONCURRENT_REQUESTS=${MAX_CONCURRENT_REQUESTS:-10}
    
    # Volumes for persistent data
    volumes:
      - ./data:/app/data:rw
      - ./logs:/app/logs:rw
      - /app/data/.cache  # tmpfs for cache
    
    # Temporary filesystems for writable areas
    tmpfs:
      - /tmp
      - /app/data/.cache
    
    # Network configuration
    networks:
      - n8n-network
    
    # Health check
    healthcheck:
      test: ["CMD", "node", "-e", "process.exit(0)"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=n8n-mcp"

  # Optional: n8n instance for testing
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    profiles:
      - with-n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-password}
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - N8N_PUBLIC_API_DISABLED=false
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - n8n-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  n8n-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  n8n_data:
    driver: local